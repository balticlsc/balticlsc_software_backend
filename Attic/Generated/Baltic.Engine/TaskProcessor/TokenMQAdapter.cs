///////////////////////////////////////////////////////////
//  TokenMQAdapter.cs
//  Implementation of the Class TokenMQAdapter
//  Generated by Enterprise Architect
//  Created on:      16-mar-2020 18:05:51
//  Original author: smialek
///////////////////////////////////////////////////////////


using Baltic.DataModel.CALExecutable;
using Baltic.Engine.MultiQueue;

namespace Baltic.Engine.TaskProcessor
{
	public class TokenMQAdapter : TokenMQAPI {

		private ITaskProcessor task_processor;
	
		//MOCK
		public MultiQueueMock Mq;
		//MOCK

		public TokenMQAdapter(){

		}

		~TokenMQAdapter(){

		}
	
		/// 
		/// <param name="tp"></param>
		public void init(ITaskProcessor tp){
			task_processor = tp;
		}

		/// 
		/// <param name="tm"></param>
		public short putTokenMessage(TokenMessage tm){
			return task_processor.PutTokenMessage(tm);
		}

		/// 
		/// <param name="queue_uid"></param>
		/// <param name="token_msg_uid"></param>
		public short ackTokenMessage(string queue_uid, string token_msg_uid){
			return Mq.RemoveMessage(queue_uid,token_msg_uid);
		}

	}
}//end TokenMQAdapter