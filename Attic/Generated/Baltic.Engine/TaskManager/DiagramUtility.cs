///////////////////////////////////////////////////////////
//  DiagramUtility.cs
//  Implementation of the Class DiagramUtility
//  Generated by Enterprise Architect
//  Created on:      29-kwi-2020 15:09:36
//  Original author: smialek
///////////////////////////////////////////////////////////




using Baltic.DataModel.CAL;
using Baltic.DataModel.Diagram;

namespace Baltic.Engine.TaskManager {
	public class DiagramUtility {

		public DiagramUtility(){

		}

		~DiagramUtility(){

		}

		/// 
		/// <param name="diagram"></param>
		public static ComputationApplicationRelease TranslateDiagram(CALDiagram diagram){

			return null;
		}

		/// 
		/// <param name="diagram"></param>
		/// <param name="appRelease"></param>
		private static void CreateDeclaredPins(CALDiagram diagram, ComputationApplicationRelease appRelease){

		}

		/// 
		/// <param name="diagram"></param>
		/// <param name="appRelease"></param>
		private static void CreateUnitCalls(CALDiagram diagram, ComputationApplicationRelease appRelease){

		}

		/// 
		/// <param name="diagram"></param>
		/// <param name="box"></param>
		/// <param name="unitCall"></param>
		private static void CreateComputedPins(CALDiagram diagram, Box box, UnitCall unitCall){

		}

		/// 
		/// <param name="diagram"></param>
		/// <param name="appRelease"></param>
		private static void CreateDataFlows(CALDiagram diagram, ComputationApplicationRelease appRelease){

		}

		/// 
		/// <param name="element"></param>
		/// <param name="name"></param>
		private static string GetCompartmentValue(Element element, string name){

			return "";
		}

	}//end DiagramUtility

}//end namespace Baltic.Engine.TaskManager