///////////////////////////////////////////////////////////
//  BrokerMessage.cs
//  Implementation of the Class BrokerMessage
//  Generated by Enterprise Architect
//  Created on:      12-mar-2020 19:55:17
//  Original author: smialek
///////////////////////////////////////////////////////////


using System.Collections.Generic;

namespace Baltic.DataModel.CALExecutable {
	public class JobMessage : Message {

		/// <summary>
		/// Dictionary<pin_uid: string, queue_name: string>
		/// </summary>
		public Dictionary<string,string> RequiredPinQueues;
		/// <summary>
		/// Dictionary<pin_uid: string, token_no: long>
		/// </summary>
		public Dictionary<string,long> ProvidedPinTokens;
		public bool Merge;
		public bool Split;
		public string YAML;
		public bool SystemJob;

		public JobMessage(){
			RequiredPinQueues = new Dictionary<string, string>();
			ProvidedPinTokens = new Dictionary<string, long>();
			Merge = false;
			Split = false;
			SystemJob = false;
		}

		~JobMessage(){

		}
		
		public override string ToString() {
			int i = 0;
			string ret = "JobMessage " + TaskUid + " " + MsgUid + "\n";
			foreach (KeyValuePair<string,string> q in RequiredPinQueues) {
				ret = ret + "\t  Queue " + i + ": " + q.ToString() + "\n";
				i++;
			}
			foreach (KeyValuePair<string,long> q in ProvidedPinTokens) {
				ret = ret + "\t  Token " + i + ": " + q.ToString() + "\n";
				i++;
			}
			return ret;
		}

	}//end JobMessage//end BrokerMessage

}//end namespace CAL_Executable