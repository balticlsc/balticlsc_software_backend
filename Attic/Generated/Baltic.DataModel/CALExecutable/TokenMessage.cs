///////////////////////////////////////////////////////////
//  TokenMessage.cs
//  Implementation of the Class TokenMessage
//  Generated by Enterprise Architect
//  Created on:      01-mar-2020 18:40:57
//  Original author: smialek
///////////////////////////////////////////////////////////


using System.Collections.Generic;

namespace Baltic.DataModel.CALExecutable {
	public class TokenMessage : Message {

		public long TokenNo;
		public string PinName;
		public string SenderUid;
		public CDataSet DataSet;
		public List<SeqToken> SeqStack;
		

		public TokenMessage() {
			SeqStack = new List<SeqToken>();
		}

		~TokenMessage(){

		}

		public virtual void Dispose(){

		}
		
		public override string ToString()
		{
			string ret = "TokenMessage " + MsgUid+ " token=" + TokenNo + " pin=" + PinName + " data=" + DataSet.Name;
			foreach (SeqToken st in SeqStack)
				ret += (0 == SeqStack.IndexOf(st) ? " #seq_stack: " : ",") + st;
			ret += "\n";
			return ret;
		}


	}//end TokenMessage

}//end namespace CAL_Executable